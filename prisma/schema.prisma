generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @default(cuid())

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  stripeCustomerId       String?             @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?             @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?             @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime?           @map(name: "stripe_current_period_end")
  FacebookAdAccount      FacebookAdAccount[]

  @@map(name: "users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map(name: "verification_tokens")
}

model AdLabel {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model FacebookAdAccount {
  id        String                  @id @default(cuid())
  name      String
  accountId String
  createdAt DateTime                @default(now())
  updatedAt DateTime                @default(now())
  isActive  Boolean                 @default(false)
  status    FacebookAdAccountStatus @default(ANY_ACTIVE)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@unique([accountId, userId])
  @@index([userId])
}

enum FacebookAdAccountStatus {
  ACTIVE
  DISABLED
  UNSETTLED
  PENDING_RISK_REVIEW
  PENDING_SETTLEMENT
  IN_GRACE_PERIOD
  PENDING_CLOSURE
  CLOSED
  ANY_ACTIVE
  ANY_CLOSED
}
