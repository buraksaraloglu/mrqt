generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @default(cuid())

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  stripeCustomerId       String?             @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?             @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?             @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime?           @map(name: "stripe_current_period_end")
  FacebookAdAccount      FacebookAdAccount[]

  @@map(name: "users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map(name: "verification_tokens")
}

model AdLabel {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FacebookAdAccount {
  id        String                  @id @default(cuid())
  name      String
  accountId String
  createdAt DateTime                @default(now())
  updatedAt DateTime                @updatedAt
  isActive  Boolean                 @default(false)
  status    FacebookAdAccountStatus @default(ANY_ACTIVE)

  user             User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String
  facebookCampaign FacebookCampaign[]

  @@unique([accountId, userId])
  @@index([userId])
}

model FacebookCampaign {
  id                  String            @id @default(cuid())
  name                String
  status              String
  buyingType          String
  objective           String
  specialAdCategories String
  startTime           DateTime?
  endTime             DateTime?
  dailyBudget         Float
  target              Json
  campaignType        String
  facebookAdAccount   FacebookAdAccount @relation(fields: [facebookAdAccountId], references: [id])
  facebookAdAccountId String
  facebookAdSet       FacebookAdSet[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([facebookAdAccountId])
}

model FacebookAdSet {
  id           String @id @default(cuid())
  name         String
  status       String
  targeting    Json
  billingEvent String
  bidAmount    Float

  facebookCampaign   FacebookCampaign? @relation(fields: [facebookCampaignId], references: [id], onDelete: Cascade)
  facebookCampaignId String?
  facebookAd         FacebookAd[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([facebookCampaignId])
}

model FacebookAd {
  id              String        @id @default(cuid())
  name            String
  status          String
  facebookAdSet   FacebookAdSet @relation(fields: [facebookAdSetId], references: [id], onDelete: Cascade)
  facebookAdSetId String
  creative        Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([facebookAdSetId])
}

enum FacebookAdAccountStatus {
  ACTIVE
  DISABLED
  UNSETTLED
  PENDING_RISK_REVIEW
  PENDING_SETTLEMENT
  IN_GRACE_PERIOD
  PENDING_CLOSURE
  CLOSED
  ANY_ACTIVE
  ANY_CLOSED
}
